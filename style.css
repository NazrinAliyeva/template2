/*
    breakpoints are viewport arbitrary values,
    they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
    the breakpoints I used were inspired by Bootstrap =>
    https://getbootstrap.com/docs/5.0/layout/breakpoints/
*/
/*
    breakpoints are viewport arbitrary values,
    they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
    the breakpoints I used were inspired by Bootstrap =>
    https://getbootstrap.com/docs/5.0/layout/breakpoints/
*/
/*
    breakpoints are viewport arbitrary values,
    they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
    the breakpoints I used were inspired by Bootstrap =>
    https://getbootstrap.com/docs/5.0/layout/breakpoints/
*/
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

.dark-text, .text-wrapper .dark-text {
  color: #202142;
  font-size: 20px;
  font-weight: 500;
}

.light-text, .text-wrapper .light-text {
  color: #6a6a6a;
  font-size: 20px;
  font-weight: 500;
}

.header {
  padding: 20px 30px;
}
.header .nav-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header .nav-wrapper .nav-item .active {
  border-radius: 30px;
  background-color: #F1F1FD;
  color: #202142;
  border-width: 10px;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .header .nav-wrapper .nav-item .active {
    background-color: white;
    color: #202142;
    border-width: 0;
    width: 0;
    width: 100px;
    margin-top: 20px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .header .nav-wrapper .nav-item .active {
    background-color: white;
    color: #202142;
    border-width: 0;
    width: 0;
    width: 100px;
    margin-top: 20px;
  }
}
.header .nav-wrapper .header-btn-wrapper {
  margin-left: 150px;
  display: flex;
  gap: 0;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .header .nav-wrapper .header-btn-wrapper {
    margin-left: 0px;
    display: flex;
    gap: 0;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .header .nav-wrapper .header-btn-wrapper {
    margin-left: 0px;
    display: flex;
    gap: 0;
  }
}
.header .nav-wrapper .header-btn-wrapper .transparent-btn {
  border: none;
  background: none;
  color: #202142;
  font-size: 16px;
  font-weight: 400px;
  padding-right: 20px;
}
.header .nav-wrapper .header-btn-wrapper .darkBlue-btn {
  background-color: #202142;
  color: #fff;
  padding: 10px 20px;
  border-radius: 20px;
}

.hero {
  background: #FCFCFF;
  padding: 50px 20px;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .hero {
    background: #FCFCFF;
    padding: 50px 0px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .hero {
    background: #FCFCFF;
    padding: 70px 0px;
  }
}
.hero .hero-wrapper {
  text-align: center;
}
.hero .hero-wrapper .title {
  color: #202142;
  font-weight: 700;
  font-size: 30px;
  padding-bottom: 20px;
}
.hero .hero-wrapper .subtitle {
  color: #202142;
  font-size: 20px;
  font-weight: 400;
  padding-bottom: 20px;
}
.hero .hero-wrapper .wrapper {
  box-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;
  width: 500px;
  margin-left: 500px;
  padding: 10px 20px;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 30px;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .hero .hero-wrapper .wrapper {
    box-shadow: 0px;
    width: 300px;
    margin-left: 50px;
    padding: 10px 20px;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .hero .hero-wrapper .wrapper {
    box-shadow: 0px;
    width: 400px;
    margin-left: 200px;
    padding: 10px 20px;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
  }
}
@media only screen and (min-width: 1199.98px) and (max-width: 1399.98px) {
  .hero .hero-wrapper .wrapper {
    box-shadow: 0px;
    width: 300px;
    margin-left: 200px;
    padding: 10px 20px;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 30px;
  }
}
.hero .hero-wrapper .wrapper .selection-wrapper {
  border-right: 2px grey solid;
  padding-right: 10px;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .hero .hero-wrapper .wrapper .selection-wrapper {
    border-right: 0;
    padding-right: 0px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .hero .hero-wrapper .wrapper .selection-wrapper {
    border-right: 0;
    padding-right: 0px;
  }
}
@media only screen and (min-width: 1199.98px) and (max-width: 1399.98px) {
  .hero .hero-wrapper .wrapper .selection-wrapper {
    border-right: 0;
    padding-right: 0px;
  }
}
.hero .hero-wrapper .wrapper .selection-wrapper .selects {
  border: none;
  padding-right: 20px;
  font-size: 20px;
}
.hero .hero-wrapper .wrapper .search-bar {
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .hero .hero-wrapper .wrapper .search-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 20px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .hero .hero-wrapper .wrapper .search-bar {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 10px;
  }
}
.hero .hero-wrapper .wrapper .search-bar .search-input {
  border: none;
  font-size: 20px;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .hero .hero-wrapper .wrapper .search-bar .search-input {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 30px;
    background: #FCFCFF;
    width: 200px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .hero .hero-wrapper .wrapper .search-bar .search-input {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 30px;
    background: #FCFCFF;
    width: 200px;
  }
}

.text-wrapper {
  display: flex;
  align-items: center;
  gap: 20px;
}
.text-wrapper .dark-text {
  display: inline;
  background: #fff;
  border-radius: 50%;
  padding: 10px;
  border: 1px solid #d7d7f9;
}
.items-wrapper {
  margin-top: 30px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .items-wrapper {
    display: flex;
    flex-direction: column;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .items-wrapper {
    display: flex;
    flex-direction: column;
    gap: 30px;
  }
}
.items-wrapper .mode-wrapper .mode {
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .items-wrapper .mode-wrapper .mode {
    height: 110px;
    width: 400px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .items-wrapper .mode-wrapper .mode {
    height: 110px;
    width: 400px;
  }
}
.items-wrapper .logo-wrapper {
  display: flex;
}
.items-wrapper .logo-wrapper .logo {
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .items-wrapper .logo-wrapper .logo {
    display: flex;
    margin-left: 10px;
    height: 150px;
    width: 50px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .items-wrapper .logo-wrapper .logo {
    display: flex;
    justify-content: space-between;
    margin-left: 30px;
    height: 150px;
    width: 100px;
  }
}

.wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}
.wrapper .wrapper-item {
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (max-width: 575.98px) {
  .wrapper .wrapper-item {
    padding: 20px 0;
    width: 500px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .wrapper {
    padding: 20px 0;
  }
}
.wrapper .card-img {
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .wrapper .card-img {
    width: 500px;
  }
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .wrapper .card-img {
    width: 500px;
  }
}
@media only screen and (max-width: 575.98px) {
  .wrapper .card-img {
    width: 400px;
    padding-left: 100px;
  }
}
.wrapper .footer-item-wrapper {
  display: flex;
  align-items: center;
  gap: 50px;
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
  /*
      breakpoints are viewport arbitrary values,
      they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
      the breakpoints I used were inspired by Bootstrap =>
      https://getbootstrap.com/docs/5.0/layout/breakpoints/
  */
}
@media only screen and (min-width: 767.99px) and (max-width: 1199.97px) {
  .wrapper .footer-item-wrapper {
    display: flex;
    align-items: center;
    gap: 230px;
  }
}
@media only screen and (max-width: 575.98px) {
  .wrapper .footer-item-wrapper {
    display: flex;
    margin-left: 100px;
    align-items: center;
    gap: 30px;
  }
}/*# sourceMappingURL=style.css.map */